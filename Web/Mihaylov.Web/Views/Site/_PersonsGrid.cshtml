@using Mihaylov.Api.Site.Client
@using Mihaylov.Web.Controllers
@using Mihaylov.Web.Models.Configs
@using Mihaylov.Web.Models.Site
@model PersonGrid

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>@Html.LabelFor(m => m.Data.First().Details.FullName)</th>
            <th>@Html.LabelFor(m => m.Data.First().Age)</th>
            <th>@Html.LabelFor(m => m.Data.First().Country)</th>
            <th>@Html.LabelFor(m => m.Data.First().Orientation)</th>
            <th>@Html.LabelFor(m => m.Data.First().Comments)</th>
            <th>@Html.LabelFor(m => m.Data.First().Accounts.First().AccountType, "Type")</th>
            <th>@Html.LabelFor(m => m.Data.First().Accounts.First().Username)</th>
            <th>@Html.LabelFor(m => m.Data.First().Accounts.First().Status)</th>
            <th>@Html.LabelFor(m => m.Data.First().Accounts.First().AskDate)</th>
            <th>@Html.LabelFor(m => m.Data.First().AnswersCount, "Answers")</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var person in Model.Data)
        {
            <tr>
                <td>@person.Details?.FullName</td>
                <td>@person.AgeGrid</td>
                <td>@person.Country</td>
                <td>@person.Orientation</td>
                <td>
                    @if (person.Comments?.Length > 12)
                    {
                        var message = $"-- {person.Comments.Length} long --";
                        @message
                    }
                    else
                    {
                        @person.Comments
                    }
                </td>
                <td>@person.Accounts.FirstOrDefault()?.AccountType</td>
                <td>@person.Accounts.FirstOrDefault()?.Username</td>
                <td>@person.Accounts.FirstOrDefault()?.Status</td>
                <td>@person.Accounts.FirstOrDefault()?.AskDate.ToString(ViewConstants.DateTimeFormatSimple)</td>
                <td>
                    @if (person.AnswersCount > 0)
                    {
                        @person.AnswersCount
                    }
                </td>
                <td>
                    <span class="btn btn-secondary edit-person-button" data-id="@person.Id">Edit</span>
                    <span class="btn btn-secondary merge-person-button" data-id="@person.Id">Merge</span>
                </td>
            </tr>

            var accounts = person.Accounts.ToArray();
            for (int i = 1; i < accounts.Length; i++)
            {
                var account = accounts[i];

                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>@account.AccountType</td>
                    <td>@account.Username</td>
                    <td>@account.Status</td>
                    <td>@account.AskDate.ToString(ViewConstants.DateTimeFormatSimple) </td>
                    <td></td>
                    <td></td>
                </tr>
            }
        }
    </tbody>
    <tfoot>
    </tfoot>
</table>

@await Html.PartialAsync("_Pager", new PagerExtended(Model.Pager)
{
    Request = Model.Request,
    Path = $"/{SiteController.NAME}/{nameof(SiteController.Index)}",
})

