{
  "openapi": "3.0.4",
  "info": {
    "title": "Other API",
    "description": "Miscellaneous Endpoints API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:5017/"
    }
  ],
  "paths": {
    "/api/Cluster/Applications": {
      "get": {
        "tags": [
          "Cluster"
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExtended"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Cluster/Application": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExtended"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cluster/Pod": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PodModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PodModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PodModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pod"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cluster/File": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeploymentFileModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeploymentFileModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeploymentFileModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentFile"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cluster/Version": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppVersionModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppVersionModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppVersionModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppVersion"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cluster/ParserSettings": {
      "get": {
        "tags": [
          "Cluster"
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParserSetting"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Cluster/ParserSetting": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ParserSettingModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ParserSettingModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ParserSettingModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParserSetting"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cluster/LastVersion": {
      "get": {
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reload",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LastVersionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Concerts/Concerts": {
      "get": {
        "tags": [
          "Concerts"
        ],
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcertExtendedGrid"
                }
              }
            }
          }
        }
      }
    },
    "/api/Concerts/Concert": {
      "post": {
        "tags": [
          "Concerts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConcertModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConcertModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConcertModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcertExtended"
                }
              }
            }
          }
        }
      }
    },
    "/api/Concerts/Bands": {
      "get": {
        "tags": [
          "Concerts"
        ],
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BandExtendedGrid"
                }
              }
            }
          }
        }
      }
    },
    "/api/Concerts/Band": {
      "post": {
        "tags": [
          "Concerts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BandModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BandModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BandModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Band"
                }
              }
            }
          }
        }
      }
    },
    "/api/Concerts/Locations": {
      "get": {
        "tags": [
          "Concerts"
        ],
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationGrid"
                }
              }
            }
          }
        }
      }
    },
    "/api/Concerts/Location": {
      "post": {
        "tags": [
          "Concerts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          }
        }
      }
    },
    "/api/Concerts/TicketProviders": {
      "get": {
        "tags": [
          "Concerts"
        ],
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketProviderGrid"
                }
              }
            }
          }
        }
      }
    },
    "/api/Concerts/TicketProvider": {
      "post": {
        "tags": [
          "Concerts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TicketProviderModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TicketProviderModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TicketProviderModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketProvider"
                }
              }
            }
          }
        }
      }
    },
    "/api/Module/GetInfo": {
      "get": {
        "tags": [
          "Module"
        ],
        "operationId": "ModuleGetInfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/Nexus/Images": {
      "get": {
        "tags": [
          "Nexus"
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NexusImages"
                }
              }
            }
          }
        }
      }
    },
    "/api/Nexus/ClearImages": {
      "delete": {
        "tags": [
          "Nexus"
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Nexus/Image": {
      "delete": {
        "tags": [
          "Nexus"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Nexus/Blobs": {
      "get": {
        "tags": [
          "Nexus"
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NexusBlobs"
                }
              }
            }
          }
        }
      }
    },
    "/api/Nexus/RunTasks": {
      "post": {
        "tags": [
          "Nexus"
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Velero/ExeVersion": {
      "get": {
        "tags": [
          "Velero"
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Velero/Schedules": {
      "get": {
        "tags": [
          "Velero"
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Velero/Backup": {
      "post": {
        "tags": [
          "Velero"
        ],
        "operationId": "CreateBackup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateBackupModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateBackupModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateBackupModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Velero/DeleteBackup": {
      "delete": {
        "tags": [
          "Velero"
        ],
        "parameters": [
          {
            "name": "backupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "helmVersion": {
            "type": "string",
            "nullable": true
          },
          "helmAppVersion": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AppVersionModel": {
        "required": [
          "applicationId",
          "releaseDate",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "version": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "helmVersion": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "helmAppVersion": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExtended": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "siteUrl": {
            "type": "string",
            "nullable": true
          },
          "releaseUrl": {
            "type": "string",
            "nullable": true
          },
          "githubVersionUrl": {
            "type": "string",
            "nullable": true
          },
          "resourceUrl": {
            "type": "string",
            "nullable": true
          },
          "deployment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeploymentType"
              }
            ],
            "x-enumNames": [
  "Yaml",
  "HelmChart",
  "Command"
],
            "x-ms-enum": {
  "name": "DeploymentType",
  "modelAsString": false,
  "values": [
    {
      "value": 1,
      "name": "Yaml"
    },
    {
      "value": 2,
      "name": "HelmChart"
    },
    {
      "value": 3,
      "name": "Command"
    }
  ]
}
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pod"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentFile"
            },
            "nullable": true
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppVersion"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModel": {
        "required": [
          "deployment",
          "name",
          "releaseUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "releaseUrl": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "siteUrl": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "resourceUrl": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "githubVersionUrl": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deployment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeploymentType"
              }
            ]
          },
          "notes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Backup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "backupItemOperationsAttempted": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "backupItemOperationsCompleted": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "errors": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completionTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupPhaseType"
              }
            ],
            "nullable": true
          },
          "itemsBackedUp": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uploads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataUpload"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BackupPhaseType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "description": "1 - New, 2 - FailedValidation, 3 - InProgress, 4 - WaitingForPluginOperations, 5 - WaitingForPluginOperationsPartiallyFailed, 6 - Finalizing, 7 - FinalizingPartiallyFailed, 8 - Completed, 9 - PartiallyFailed, 10 - Failed, 11 - Deleting",
        "format": "int32",
        "x-enumNames": [
  "New",
  "FailedValidation",
  "InProgress",
  "WaitingForPluginOperations",
  "WaitingForPluginOperationsPartiallyFailed",
  "Finalizing",
  "FinalizingPartiallyFailed",
  "Completed",
  "PartiallyFailed",
  "Failed",
  "Deleting"
],
        "x-ms-enum": {
  "name": "BackupPhaseType",
  "modelAsString": false,
  "values": [
    {
      "value": 1,
      "name": "New"
    },
    {
      "value": 2,
      "name": "FailedValidation"
    },
    {
      "value": 3,
      "name": "InProgress"
    },
    {
      "value": 4,
      "name": "WaitingForPluginOperations"
    },
    {
      "value": 5,
      "name": "WaitingForPluginOperationsPartiallyFailed"
    },
    {
      "value": 6,
      "name": "Finalizing"
    },
    {
      "value": 7,
      "name": "FinalizingPartiallyFailed"
    },
    {
      "value": 8,
      "name": "Completed"
    },
    {
      "value": 9,
      "name": "PartiallyFailed"
    },
    {
      "value": 10,
      "name": "Failed"
    },
    {
      "value": 11,
      "name": "Deleting"
    }
  ]
}
      },
      "Band": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BandExtended": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BandExtendedGrid": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BandExtended"
            },
            "nullable": true
          },
          "pager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Pager"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BandModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConcertExtended": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              }
            ],
            "x-enumNames": [
  "BGN",
  "EUR"
],
            "x-ms-enum": {
  "name": "CurrencyType",
  "modelAsString": false,
  "values": [
    {
      "value": 1,
      "name": "BGN"
    },
    {
      "value": 2,
      "name": "EUR"
    }
  ]
}
          },
          "ticketProviderId": {
            "type": "integer",
            "format": "int32"
          },
          "bands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Band"
            },
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "ticketProvider": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConcertExtendedGrid": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConcertExtended"
            },
            "nullable": true
          },
          "pager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Pager"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConcertModel": {
        "required": [
          "currency",
          "date",
          "locationId",
          "price",
          "ticketProviderId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              }
            ]
          },
          "ticketProviderId": {
            "type": "integer",
            "format": "int32"
          },
          "bandIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBackupModel": {
        "required": [
          "scheduleName"
        ],
        "type": "object",
        "properties": {
          "scheduleName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CurrencyType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "1 - BGN, 2 - EUR",
        "format": "int32",
        "x-enumNames": [
  "BGN",
  "EUR"
],
        "x-ms-enum": {
  "name": "CurrencyType",
  "modelAsString": false,
  "values": [
    {
      "value": 1,
      "name": "BGN"
    },
    {
      "value": 2,
      "name": "EUR"
    }
  ]
}
      },
      "DataUpload": {
        "type": "object",
        "properties": {
          "claimName": {
            "type": "string",
            "nullable": true
          },
          "volumeName": {
            "type": "string",
            "nullable": true
          },
          "cephName": {
            "type": "string",
            "nullable": true
          },
          "storageClassName": {
            "type": "string",
            "nullable": true
          },
          "capacity": {
            "type": "string",
            "nullable": true
          },
          "phase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataUploadPhaseType"
              }
            ],
            "nullable": true
          },
          "bytesDone": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "startTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completionTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataUploadPhaseType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "1 - New, 2 - Accepted, 3 - Prepared, 4 - InProgress, 5 - Canceling, 6 - Canceled, 7 - Completed, 8 - Failed",
        "format": "int32",
        "x-enumNames": [
  "New",
  "Accepted",
  "Prepared",
  "InProgress",
  "Canceling",
  "Canceled",
  "Completed",
  "Failed"
],
        "x-ms-enum": {
  "name": "DataUploadPhaseType",
  "modelAsString": false,
  "values": [
    {
      "value": 1,
      "name": "New"
    },
    {
      "value": 2,
      "name": "Accepted"
    },
    {
      "value": 3,
      "name": "Prepared"
    },
    {
      "value": 4,
      "name": "InProgress"
    },
    {
      "value": 5,
      "name": "Canceling"
    },
    {
      "value": 6,
      "name": "Canceled"
    },
    {
      "value": 7,
      "name": "Completed"
    },
    {
      "value": 8,
      "name": "Failed"
    }
  ]
}
      },
      "DeploymentFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeploymentFileModel": {
        "required": [
          "applicationId",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeploymentType": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "1 - Yaml, 2 - HelmChart, 3 - Command",
        "format": "int32",
        "x-enumNames": [
  "Yaml",
  "HelmChart",
  "Command"
],
        "x-ms-enum": {
  "name": "DeploymentType",
  "modelAsString": false,
  "values": [
    {
      "value": 1,
      "name": "Yaml"
    },
    {
      "value": 2,
      "name": "HelmChart"
    },
    {
      "value": 3,
      "name": "Command"
    }
  ]
}
      },
      "LastVersionModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "rawVersion": {
            "type": "string",
            "nullable": true
          },
          "rawReleaseDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LastVersionResponse": {
        "type": "object",
        "properties": {
          "lastVersion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LastVersionModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationGrid": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "nullable": true
          },
          "pager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Pager"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ModuleInfo": {
        "type": "object",
        "properties": {
          "moduleName": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "framework": {
            "type": "string",
            "nullable": true
          },
          "buildDate": {
            "type": "string",
            "nullable": true
          },
          "gitCommit": {
            "type": "string",
            "nullable": true
          },
          "jenkinsBuildNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NexusBlobResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "unavailable": {
            "type": "boolean"
          },
          "blobCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalSizeInBytes": {
            "type": "integer",
            "format": "int64"
          },
          "availableSpaceInBytes": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "NexusBlobs": {
        "type": "object",
        "properties": {
          "blobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NexusBlobResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NexusImage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NexusImages": {
        "type": "object",
        "properties": {
          "images": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NexusImage"
              },
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Pager": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "pageMax": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ParserSetting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "versionUrlType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VersionUrlType"
              }
            ],
            "x-enumNames": [
  "SiteUrl",
  "ReleaseUrl",
  "GithubVersionUrl",
  "ResourceUrl"
],
            "x-ms-enum": {
  "name": "VersionUrlType",
  "modelAsString": false,
  "values": [
    {
      "value": 1,
      "name": "SiteUrl"
    },
    {
      "value": 2,
      "name": "ReleaseUrl"
    },
    {
      "value": 3,
      "name": "GithubVersionUrl"
    },
    {
      "value": 4,
      "name": "ResourceUrl"
    }
  ]
}
          },
          "versionSelector": {
            "type": "string",
            "nullable": true
          },
          "versionCommand": {
            "type": "string",
            "nullable": true
          },
          "releaseDateUrlType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VersionUrlType"
              }
            ],
            "nullable": true
          },
          "releaseDateSelector": {
            "type": "string",
            "nullable": true
          },
          "releaseDateCommand": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParserSettingModel": {
        "required": [
          "applicationId",
          "versionSelector",
          "versionUrlType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "versionUrlType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VersionUrlType"
              }
            ]
          },
          "versionSelector": {
            "maxLength": 4000,
            "minLength": 1,
            "type": "string"
          },
          "versionCommand": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "releaseDateUrlType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VersionUrlType"
              }
            ],
            "nullable": true
          },
          "releaseDateSelector": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "releaseDateCommand": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Pod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PodModel": {
        "required": [
          "applicationId",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Schedule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cron": {
            "type": "string",
            "nullable": true
          },
          "paused": {
            "type": "boolean",
            "nullable": true
          },
          "csiSnapshotTimeout": {
            "type": "string",
            "nullable": true
          },
          "lastBackup": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SchedulePhaseType"
              }
            ],
            "nullable": true
          },
          "includedNamespaces": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "excludedResources": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "itemOperationTimeout": {
            "type": "string",
            "nullable": true
          },
          "matchLabels": {
            "type": "string",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "nullable": true
          },
          "snapshotMoveData": {
            "type": "boolean"
          },
          "storageLocation": {
            "type": "string",
            "nullable": true
          },
          "backups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Backup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SchedulePhaseType": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "1 - New, 2 - Enabled, 3 - FailedValidation",
        "format": "int32",
        "x-enumNames": [
  "New",
  "Enabled",
  "FailedValidation"
],
        "x-ms-enum": {
  "name": "SchedulePhaseType",
  "modelAsString": false,
  "values": [
    {
      "value": 1,
      "name": "New"
    },
    {
      "value": 2,
      "name": "Enabled"
    },
    {
      "value": 3,
      "name": "FailedValidation"
    }
  ]
}
      },
      "ScheduleResponse": {
        "type": "object",
        "properties": {
          "statistics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduleStatistics"
              }
            ],
            "nullable": true
          },
          "schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Schedule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScheduleStatistics": {
        "type": "object",
        "properties": {
          "scheduleCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalBackupCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastWeekBackupCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastDayBackupCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalSuccessfulBackupCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastWeekSuccessfulBackupCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastDaySuccessfulBackupCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TicketProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketProviderGrid": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketProvider"
            },
            "nullable": true
          },
          "pager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Pager"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketProviderModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "url": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VersionUrlType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "1 - SiteUrl, 2 - ReleaseUrl, 3 - GithubVersionUrl, 4 - ResourceUrl",
        "format": "int32",
        "x-enumNames": [
  "SiteUrl",
  "ReleaseUrl",
  "GithubVersionUrl",
  "ResourceUrl"
],
        "x-ms-enum": {
  "name": "VersionUrlType",
  "modelAsString": false,
  "values": [
    {
      "value": 1,
      "name": "SiteUrl"
    },
    {
      "value": 2,
      "name": "ReleaseUrl"
    },
    {
      "value": 3,
      "name": "GithubVersionUrl"
    },
    {
      "value": 4,
      "name": "ResourceUrl"
    }
  ]
}
      }
    }
  }
}